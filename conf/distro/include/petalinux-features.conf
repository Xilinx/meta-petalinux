IMAGE_FSTYPES += "tar.gz cpio.gz.u-boot jffs2 ext4"

POKY_DEFAULT_DISTRO_FEATURES = "${BUSYBOX_FEATURES} largefile pam ptest"

# If the hardware has mali graphics, use libmali
DISTRO_FEATURES_BACKFILL:append:aarch64 = ' libmali'

# BusyBox features
BUSYBOX_FEATURES = " \
	busybox-hd \
	busybox-ftpd \
	busybox-ftp \
	busybox-telnetd \
	busybox-mdev \
	busybox-inetd \
	busybox-httpd \
	"

DISTRO_FEATURES_DEFAULT:microblaze = "ipv4 ipv6 xattr"

# PetaLinux Default Distro features
PETALINUX_DEFAULT_DISTRO_FEATURES = "fbdev opengl openamp x11 ${PETALINUX_MISC_FEATURES}"

# Remove unsupported PetaLinux Default Distro features for microBlaze
PETALINUX_DEFAULT_DISTRO_FEATURES:microblaze = ""

# PetaLinux Miscellaneous features for aarch64
PETALINUX_MISC_FEATURES = "multiarch security tpm virtualization vmsep wayland xen"

# For xen, we need to use the internal busybox
RUNX_USE_INTERNAL_BUSYBOX='1'

# Remove unsupported PetaLinux Miscellaneous features for zynq and microBlaze
PETALINUX_MISC_FEATURES:zynq = ""
PETALINUX_MISC_FEATURES:microblaze = ""

DISTRO_FEATURES = "${DISTRO_FEATURES_DEFAULT} ${POKY_DEFAULT_DISTRO_FEATURES} ${PETALINUX_DEFAULT_DISTRO_FEATURES}"

SKIP_META_VIRT_SANITY_CHECK:zynq = "1"
SKIP_META_SECURITY_SANITY_CHECK:zynq = "1"
SKIP_META_TPM_SANITY_CHECK:zynq = "1"
SKIP_META_VIRT_SANITY_CHECK:microblaze = "1"
SKIP_META_GNOME_SANITY_CHECK:microblaze = "1"
SKIP_META_SECURITY_SANITY_CHECK:microblaze = "1"
SKIP_META_TPM_SANITY_CHECK:microblaze = "1"

VIRTUAL-RUNTIME_dev_manager:microblaze = "busybox-mdev"
VIRTUAL-RUNTIME_login_manager = "busybox"

INIT_MANAGER_PLNX_DEFAULT = "systemd"
INIT_MANAGER_PLNX_DEFAULT:microblaze = "sysvinit"
INIT_MANAGER_PLNX_DEFAULT:zynq = "sysvinit"

INIT_MANAGER_DEFAULT ?= "${INIT_MANAGER_PLNX_DEFAULT}"

# The user can override INIT_MANAGER by setting INIT_MANAGER_DEFAULT
INIT_MANAGER = "${INIT_MANAGER_DEFAULT}"

# If we enable both systemd and sysvinit DISTRO_FEATURES, we
# need to ensure that the other one is not installed
PACKAGE_EXCLUDE:append = "${@bb.utils.contains('INIT_MANAGER','systemd',' sysvinit',' systemd',d)}"
# We also need to ensure that dev-pkgs doesn't accidently bring it in either
PACKAGE_EXCLUDE_COMPLEMENTARY:append = "${@bb.utils.contains('INIT_MANAGER','systemd',' sysvinit',' libsystemd libudev udev systemd',d)}"

# Update the default to include the vai sdk host packages
# Along with a simple way to turn it off!
PLNX_ADD_VAI_SDK ?= " nativesdk-packagegroup-protobuf-sdk-host"
PLNX_ADD_VAI_SDK:sdkmingw32 = ""
TOOLCHAIN_HOST_TASK:append = "${PLNX_ADD_VAI_SDK}"

PREFERRED_PROVIDER_iasl-native ?= "iasl-native"
PREFERRED_PROVIDER_virtual/boot-bin ?= "xilinx-bootbin"
PREFERRED_PROVIDER_virtual/dtb ?= "device-tree"
PREFERRED_PROVIDER_virtual/runc = "runc-opencontainers"
PREFERRED_PROVIDER_virtual/containerd = "containerd-opencontainers"
PREFERRED_PROVIDER_start-jupyter = "start-jupyternb"
PREFERRED_PROVIDER_start-jupyter:kria = "start-jupyterlab"

UBOOT_SUFFIX = "bin"

# OpenAMP
PREFERRED_PROVIDER_libmetal ?= "libmetal-xlnx"
PREFERRED_PROVIDER_open-amp ?= "open-amp-xlnx"

# XRT requires a specific ocl implementation
SKIP_RECIPE[opencl-icd-loader] = "Not supported, only ocl-icd is supported at this time."
PREFERRED_PROVIDER_virtual/opencl-icd = "ocl-icd"
